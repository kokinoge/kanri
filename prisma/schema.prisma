// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ユーザー管理
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String
  role          String    @default("member")
  department    String?
  isActive      Boolean   @default(true)
  lastLogin     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  campaigns     Campaign[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

// ビジネスデータ
model Client {
  id          String @id @default(cuid())
  name        String
  manager     String
  priority    Int
  industry    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  campaigns   Campaign[]
}

model Campaign {
  id          String @id @default(cuid())
  clientId    String
  name        String
  purpose     String
  startDate   DateTime
  endDate     DateTime
  totalBudget Decimal
  status      String @default("active")
  userId      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  client      Client @relation(fields: [clientId], references: [id])
  user        User? @relation(fields: [userId], references: [id])
  budgets     Budget[]
  results     Result[]
}

model Budget {
  id           String @id @default(cuid())
  campaignId   String
  year         Int
  month        Int
  platform     String
  operationType String
  revenueType  String
  budgetAmount Decimal
  targetKpi    String
  targetValue  Decimal
  status       String @default("pending")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  campaign     Campaign @relation(fields: [campaignId], references: [id])
}

model Result {
  id           String @id @default(cuid())
  campaignId   String
  year         Int
  month        Int
  platform     String
  operationType String
  actualSpend  Decimal
  actualResult Decimal
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  campaign     Campaign @relation(fields: [campaignId], references: [id])
}

model Master {
  id       String @id @default(cuid())
  category String
  value    String
  order    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}