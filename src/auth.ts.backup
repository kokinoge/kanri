import NextAuth, { NextAuthOptions } from "next-auth"
import CredentialsProvider from "next-auth/providers/credentials"

const authOptions: NextAuthOptions = {
  providers: [
    CredentialsProvider({
      name: "credentials",
      credentials: {
        email: { label: "Email", type: "email" },
        password: { label: "Password", type: "password" }
      },
      async authorize(credentials) {
        console.log("AUTH: Attempting login with", { email: credentials?.email, env: process.env.NODE_ENV })
        
        // 開発・本番共通の簡易認証
        if (credentials?.email === "admin@example.com" && 
           (credentials?.password === "admin" || credentials?.password === "admin123")) {
          console.log("AUTH: Login successful")
          return {
            id: "1",
            name: "管理者ユーザー",
            email: "admin@example.com",
            role: "admin",
            department: "管理部"
          }
        }
        
        console.log("AUTH: Login failed - invalid credentials")
        return null
      }
    })
  ],
  pages: {
    signIn: '/login',
    error: '/login',
  },
  callbacks: {
    async jwt({ token, user }) {
      if (user) {
        token.role = (user as any).role
        token.department = (user as any).department
      }
      return token
    },
    async session({ session, token }) {
      if (token) {
        (session.user as any).id = token.sub;
        (session.user as any).role = token.role;
        (session.user as any).department = token.department
      }
      return session
    },
  },
  session: {
    strategy: "jwt",
    maxAge: 30 * 24 * 60 * 60, // 30 days
  },
  secret: process.env.NEXTAUTH_SECRET,
  debug: process.env.NODE_ENV === "development",
}

// NextAuth設定からhandlersとauth関数を取得
const { handlers, auth } = NextAuth(authOptions)

// App Router用のエクスポート
export { handlers, auth, authOptions }
export const { GET, POST } = handlers

// デフォルトエクスポート
export default auth 